<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from urdf/macros.xacro              | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="virtual_robot">
  <!-- inertial parameter macros -->
  <!-- geometry macros -->
  <!-- transmission macros -->
  <!-- Add chassis and it's inertia link -->
  <link name="car_1_base_link"/>
  <link name="car_1_chassis">
    <visual>
      <origin rpy="1.57 0 3.14" xyz="0.46 -0.135 -0.180"/>
      <geometry>
        <mesh filename="/sim_ws/src/urdf/meshes/chassis.stl" scale="0.000990 0.0009375 0.0009375"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision>
      <origin rpy="1.57 0 3.14" xyz="0.46 -0.135 -0.180"/>
      <geometry>
        <mesh filename="/sim_ws/src/urdf/meshes/chassis.stl" scale="0.000990 0.0009375 0.0009375"/>
      </geometry>
    </collision>
  </link>
  <joint name="car_1_base_link_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.05"/>
    <parent link="car_1_base_link"/>
    <child link="car_1_chassis"/>
  </joint>
  <link name="car_1_chassis_inertia">
    <inertial>
      <origin rpy="0 0 0" xyz="0.1477 0 0"/>
      <mass value="4.0"/>
      <inertia ixx="0.010609" ixy="0" ixz="0" iyy="0.050409" iyz="0" izz="0.05865"/>
    </inertial>
  </link>
  <joint name="car_1_chassis_inertia_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="car_1_chassis"/>
    <child link="car_1_chassis_inertia"/>
  </joint>
  <!-- Add the left rear wheel with its joints and tranmissions -->
  <link name="car_1_left_rear_wheel">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 -0.0225"/>
      <mass value="0.34055"/>
      <inertia ixx="0.00026046" ixy="0" ixz="0" iyy="0.00026046" iyz="0" izz="0.00041226"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="/sim_ws/src/urdf/meshes/left_wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.0225"/>
      <geometry>
        <cylinder length="0.045" radius="0.05"/>
      </geometry>
    </collision>
  </link>
  <joint name="car_1_left_rear_wheel_joint" type="continuous">
    <origin rpy="1.5708 0 0" xyz="0 0.1 0"/>
    <parent link="car_1_chassis"/>
    <child link="car_1_left_rear_wheel"/>
    <axis xyz="0 0 -1"/>
    <limit effort="10" velocity="100"/>
  </joint>
  <transmission name="car_1_left_rear_wheel_transmission" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="car_1_left_rear_wheel_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="car_1_left_rear_wheel_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- Add the right rear wheel with its joints and tranmissions -->
  <link name="car_1_right_rear_wheel">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.0225"/>
      <mass value="0.34055"/>
      <inertia ixx="0.00026046" ixy="0" ixz="0" iyy="0.00026046" iyz="0" izz="0.00041226"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="/sim_ws/src/urdf/meshes/right_wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.0225"/>
      <geometry>
        <cylinder length="0.045" radius="0.05"/>
      </geometry>
    </collision>
  </link>
  <joint name="car_1_right_rear_wheel_joint" type="continuous">
    <origin rpy="1.5708 0 0" xyz="0 -0.1 0"/>
    <parent link="car_1_chassis"/>
    <child link="car_1_right_rear_wheel"/>
    <axis xyz="0 0 -1"/>
    <limit effort="10" velocity="100"/>
  </joint>
  <transmission name="car_1_right_rear_wheel_transmission" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="car_1_right_rear_wheel_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="car_1_right_rear_wheel_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- Add the left steering hinge with its joints and tranmissions -->
  <link name="car_1_left_steering_hinge">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.100"/>
      <inertia ixx="4E-06" ixy="0" ixz="0" iyy="4E-06" iyz="0" izz="4E-06"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="/sim_ws/src/urdf/meshes/hinge.stl"/>
      </geometry>
      <material name="grey"/>
    </visual>
  </link>
  <joint name="car_1_left_steering_hinge_joint" type="revolute">
    <origin rpy="0 1.5708 0" xyz="0.325 0.1 0"/>
    <parent link="car_1_chassis"/>
    <child link="car_1_left_steering_hinge"/>
    <axis xyz="-1 0 0"/>
    <limit effort="10" lower="-1.0" upper="1.0" velocity="100"/>
  </joint>
  <transmission name="car_1_left_steering_hinge_transmission" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="car_1_left_steering_hinge_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="car_1_left_steering_hinge_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- Add the right steering hinge with its joints and tranmissions -->
  <link name="car_1_right_steering_hinge">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.100"/>
      <inertia ixx="4E-06" ixy="0" ixz="0" iyy="4E-06" iyz="0" izz="4E-06"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="/sim_ws/src/urdf/meshes/hinge.stl"/>
      </geometry>
      <material name="grey"/>
    </visual>
  </link>
  <joint name="car_1_right_steering_hinge_joint" type="revolute">
    <origin rpy="0 1.5708 0" xyz="0.325 -0.1 0"/>
    <parent link="car_1_chassis"/>
    <child link="car_1_right_steering_hinge"/>
    <axis xyz="-1 0 0"/>
    <limit effort="10" lower="-1.0" upper="1.0" velocity="100"/>
  </joint>
  <transmission name="car_1_right_steering_hinge_transmission" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="car_1_right_steering_hinge_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="car_1_right_steering_hinge_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- Add the left front wheel with its joints and tranmissions -->
  <link name="car_1_left_front_wheel">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 -0.0225"/>
      <mass value="0.34055"/>
      <inertia ixx="0.00026046" ixy="0" ixz="0" iyy="0.00026046" iyz="0" izz="0.00041226"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="/sim_ws/src/urdf/meshes/left_wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.0225"/>
      <geometry>
        <cylinder length="0.045" radius="0.05"/>
      </geometry>
    </collision>
  </link>
  <joint name="car_1_left_front_wheel_joint" type="continuous">
    <origin rpy="1.5708 0 0" xyz="0 0 0"/>
    <parent link="car_1_left_steering_hinge"/>
    <child link="car_1_left_front_wheel"/>
    <axis xyz="0 0 -1"/>
    <limit effort="10" velocity="100"/>
  </joint>
  <transmission name="car_1_left_front_wheel_transmission" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="car_1_left_front_wheel_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="car_1_left_front_wheel_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- Add the left front wheel with its joints and tranmissions -->
  <link name="car_1_right_front_wheel">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.0225"/>
      <mass value="0.34055"/>
      <inertia ixx="0.00026046" ixy="0" ixz="0" iyy="0.00026046" iyz="0" izz="0.00041226"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="/sim_ws/src/urdf/meshes/right_wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.0225"/>
      <geometry>
        <cylinder length="0.045" radius="0.05"/>
      </geometry>
    </collision>
  </link>
  <joint name="car_1_right_front_wheel_joint" type="continuous">
    <origin rpy="1.5708 0 0" xyz="0 0 0"/>
    <parent link="car_1_right_steering_hinge"/>
    <child link="car_1_right_front_wheel"/>
    <axis xyz="0 0 -1"/>
    <limit effort="10" velocity="100"/>
  </joint>
  <transmission name="car_1_right_front_wheel_transmission" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="car_1_right_front_wheel_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="car_1_right_front_wheel_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- Add Hokuyo laser scanner -->
  <link name="car_1_laser">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.130"/>
      <inertia ixx="4E-06" ixy="0" ixz="0" iyy="4E-06" iyz="0" izz="4E-06"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.018"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 -0.018"/>
      <geometry>
        <mesh filename="/sim_ws/src/urdf/meshes/hokuyo.stl"/>
        <material name="grey"/>
      </geometry>
    </visual>
  </link>
  <joint name="car_1_hokuyo_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.125 0.0 0.173"/>
    <parent link="car_1_chassis"/>
    <child link="car_1_laser"/>
    <axis xyz="0 0 1"/>
  </joint>
  <!-- camera class (spawn parameters) -->
  <link name="car_1_link">
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0.25"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.25"/>
      <geometry>
        <box size="0.033 0.175 0.030"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.025"/>
      <geometry>
        <box size="0.033 0.175 0.030"/>
      </geometry>
      <material name="red"/>
    </visual>
  </link>
  <joint name="car_1_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.390 0 0.025"/>
    <parent link="car_1_chassis"/>
    <child link="car_1_link"/>
    <axis xyz="0 0 1"/>
    <!-- <limit lower="0.0" upper="0.0" effort="0.0" velocity="0.0" /> -->
  </joint>
  <!-- camera lenses -->
  <link name="car_1_camera_link">
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 .57 0" xyz="-2.5 0 1.75"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <link name="car_1_right_link">
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 .57 0" xyz="-2.5 0 1.75"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <joint name="car_1_left_joint" type="fixed">
    <origin rpy="0 .57 0" xyz="-2.5 0 1.75"/>
    <parent link="car_1_link"/>
    <child link="car_1_camera_link"/>
    <axis xyz="0 0 1"/>
  </joint>
  <joint name="car_1_right_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 -0.06 0.025"/>
    <parent link="car_1_link"/>
    <child link="car_1_right_link"/>
    <axis xyz="0 0 1"/>
  </joint>
  <!-- Gazebo references -->
  <gazebo reference="car_1_chassis">
    <mu1 value="0.0"/>
    <mu2 value="0.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="car_1_left_rear_wheel">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="car_1_right_rear_wheel">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="car_1_left_front_wheel">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="0 0 1"/>
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="car_1_right_front_wheel">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="0 0 1"/>
    <material>Gazebo/Black</material>
  </gazebo>
  <!-- Gazebo plugins -->
  <!-- <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/$(arg robot_name)</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>

  Odometry (cheap hack)
  <gazebo>
    <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>50.0</updateRate>
      <bodyName>$(arg robot_name)_base_link</bodyName>
      <topicName>/$(arg robot_name)/ground_truth</topicName>
      <gaussianNoise>0.01</gaussianNoise>
      <frameName>world</frameName>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
    </plugin>
  </gazebo> -->
  <gazebo reference="car_1_laser">
    <material>Gazebo/Grey</material>
    <sensor name="car_1_hokuyo_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1081</samples>
            <resolution>1</resolution>
            <min_angle>-2.3561944902</min_angle>
            <max_angle>2.3561944902</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <!-- <plugin name="hokuyo_controller" filename="libgazebo_ros_laser.so">
          <topicName>/$(arg robot_name)/scan</topicName>
          <frameName>$(arg robot_name)_laser</frameName>
        </plugin> -->
      <topic>scan</topic>
      <gz_frame_id>car_1_laser</gz_frame_id>
    </sensor>
  </gazebo>
  <gazebo reference="car_1_camera_link">
    <sensor name="car_1_left_sensor" type="camera">
      <update_rate>30.0</update_rate>
      <!-- math.atan(320 / 687.8065795898438) * 2 -->
      <gz_frame_id>car_1_camera_link</gz_frame_id>
      <topic>camera/image_raw</topic>
      <camera name="front_camera">
        <camera_info_topic>camera/camera_info</camera_info_topic>
        <!-- horizontal_fov>0.8709216071359963</horizontal_fov -->
        <horizontal_fov>1.74</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1080</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <!-- <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>30.0</updateRate>
          <cameraName>/$(arg robot_name)/camera</cameraName>
          <imageTopicName>image</imageTopicName>
          <frameName>$(arg robot_name)_camera_link</frameName>
          <hackBaseline>0</hackBaseline>set this to 0.12 for the second camera
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin> -->
    </sensor>
  </gazebo>
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.4235294117647059 0.0392156862745098 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.8705882352941177 0.8117647058823529 0.7647058823529411 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
</robot>
